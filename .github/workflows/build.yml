# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build Node

on:
  push:
    branches:
      - 'master'
      - 'ibtida'

    tags:
      - 'v*'

  pull_request:
    branches:
      - 'master'
      - 'ibtida'

jobs:
  build-docker-images:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changes on Dockerfile
        id: changed-dockerfile
        uses: tj-actions/changed-files@v1.0.0
        with:
          files: Dockerfile*

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}

      - name: Login to DockerHub
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push builder image
        uses: docker/build-push-action@v2
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' }}
        with:
          file: ./Dockerfile.build
          push: ${{ github.event_name != 'pull_request' }}
          tags: anmolnetwork/anmol-node-build:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}
        with:
          images: anmolnetwork/anmol-node
          tags: |
            type=ref,event=branch
            type=ref,event=tag
          labels: |
            org.opencontainers.image.vendor=Anmol Network
            org.opencontainers.image.url=https://anmol.network

      - name: Build and push production image
        uses: docker/build-push-action@v2
        if: ${{ steps.changed-dockerfile.outputs.any_changed == 'true' || github.event_name != 'pull_request' }}
        with:
          build-args: |
            SCCACHE_BUCKET=${{ secrets.SCCACHE_BUCKET }}
            SCCACHE_AWS_ACCESS_KEY_ID=${{ secrets.SCCACHE_AWS_ACCESS_KEY_ID }}
            SCCACHE_AWS_SECRET_ACCESS_KEY=${{ secrets.SCCACHE_AWS_SECRET_ACCESS_KEY }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
